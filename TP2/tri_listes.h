/*******************************************************************************//* Fichier tri_listes.h                                                        *//* cree le 27/11/2018 par Alix Munier Kordon                                   *//* Ce fichier contient la declaration des fonctions de tri de liste            *//*******************************************************************************/#include "listes.h"/*******************************************************************************//* PTRCELLULE triInsertion(PTRCELLULE tete)                                    *//* Tri tete par insertion                                                      *//* retourne l'adresse de la liste triee                                        *//*******************************************************************************/PTRCELLULE triInsertion(PTRCELLULE);/*******************************************************************************//* PTRCELLULE triSelection(PTRCELLULE tete)                                    *//* Tri tete par selection                                                      *//* retourne l'adresse de la liste triee                                        *//*******************************************************************************/PTRCELLULE triSelection(PTRCELLULE tete);/*******************************************************************************//* PTRCELLULE eclatement  (PTRCELLULE tete, PTRCELLULE* pInf, PTRCELLULE* psup)*//* Eclate la liste non vide pointee par tete en 3 sous-listes:                 *//* pinf est l'adresse de la tete de la liste des elements strictement plus     *//* petits que la premiere cellule de tete                                      *//* psup est l'adresse de la tete de la liste des elements  plus                *//* grands que la premiere cellule de tete                                      *//* La fonction renvoie la premiere cellule de tete                             *//*******************************************************************************/		PTRCELLULE eclatement (PTRCELLULE, PTRCELLULE*, PTRCELLULE*);/*******************************************************************************//* PTRCELLULE QuickSort(PTRCELLULE tete)                                       *//* Tri tete par Quicksort                                                      *//* retourne l'adresse de la liste triee                                        *//*******************************************************************************/PTRCELLULE QuickSort(PTRCELLULE);/*******************************************************************************//* PTRCELLULE eclatementBis(PTRCELLULE tete, PTRCELLULE* pInf, PTRCELLULE* psup)*//* Eclate la liste non vide pointee par tete en 3 sous-listes:                 *//* pinf est l'adresse de la tete de la liste des elements strictement plus     *//* petits que la premiere cellule de tete                                      *//* psup est l'adresse de la tete de la liste des elements  plus                *//* grands que la premiere cellule de tete                                      *//* La fonction renvoie la premiere cellule de tete                             *//*******************************************************************************/		PTRCELLULE eclatementBis  (PTRCELLULE, PTRCELLULE*, PTRCELLULE*);/*******************************************************************************//* void divsion(PTRCELLULE tete, PTRCELLULE* pL1, PTRCELLULE* pL2)             *//* Eclate la liste pointee par tete en deus sous listes pointees par           *//* *pL1 et *pL2                                                                *//* on gardera l'Ã©dresse de la derniere celleule inseree pour effectuer         *//* une insertion en queue en theta(1)                                          *//*******************************************************************************/void divsion(PTRCELLULE, PTRCELLULE*, PTRCELLULE*);	/*******************************************************************************//* PTRCELLULE fusionTriee(PTRCELLULE L1, PTRCELLULE L2)                        *//* Fusionne les deux listes triees L1 et L2 en une troisieme trie et           *//* la renvoie                                                                  *//*******************************************************************************/PTRCELLULE fusionTriee(PTRCELLULE L1, PTRCELLULE L2);/*******************************************************************************//* PTRCELLULE TriFusion(PTRCELLULE tete)                                       *//* Tri tete par Fsuin                                                          *//* retourne l'adresse de la liste triee                                        *//*******************************************************************************/PTRCELLULE triFusion (PTRCELLULE tete);			